Lyte.Component.register("lyte-fileupload",{_template:'<template tag-name="lyte-fileupload"> <input class="fileuploadInput {{ltPropClass}}" id="{{ltPropId}}" type="file" name="{{ltPropName}}" onchange="{{action(\'change\',event,this)}}" oncancel="{{action(\'cancel\',event,this)}}" multiple="{{ltPropMultiple}}" accept="{{ltPropAccept}}"> <div tabindex="{{ltPropTabindex}}" class="fileUploadWrapper {{fileClass}} {{if(ltPropMultiple,\'multiFileupload\',\'singleFileUpload\')}} lyteFileUpd{{ltPropAppearance}}Type {{if(ltPropDisabled,\'lyteFileUpdDisabled\')}} {{maxFileClass}}" ondragenter="{{action(\'drag\',event)}}" ondragover="{{action(\'drag\',event)}}" ondrop="{{action(\'drop\',event)}}" onclick="{{action(\'click\',event)}}" style="outline: none;position: relative;" onpaste="{{action(\'paste\',event)}}" onkeydown="{{action(\'keydown\',event)}}" aria-labelledby="{{randomAriaId}}" data-tabindex="{{ltPropDataTabindex}}"> <template is="if" value="{{ltPropYield}}"><template case="true"> <lyte-yield yield-name="file" queue-list="{{queueList}}" predefined-list="{{predefinedList}}"></lyte-yield> </template><template case="false"> <template is="if" value="{{ltPropMultiple}}"><template case="true"> <lyte-file-select-area aria-hidden="true"> <lyte-file-message class="lyteFileUpdMsgWrap"> <span class="lyteFileUpdMsg">{{lyteUiI18n(ltPropMessage,"fileupload")}}</span> </lyte-file-message> </lyte-file-select-area> <div class="lyteFileUpdList"> <template is="for" items="{{predefinedList}}" item="item" index="index"> <div class="lyteFileUpdListFile"> <div class="lyteFileUpdTypePreview"> <template is="if" value="{{lyteUiImageFile(item)}}"><template case="true"> <img class="lyteFileUpdThumb" src="{{item.src}}"> </template><template case="false"> <span class="lyteFileUpdTypeIcon {{item.fileType}}"></span> </template></template> </div> <lyte-text class="lyteFileUpdFileName" lt-prop-value="{{item.name}}"></lyte-text> <span class="lyteFileUpdFileSize">( {{lyteUiFileSize(item.size,ltPropFileUnit,ltPropDigits)}} )</span> <lyte-file-close data-value="{{item.id}}" role="button" aria-label="{{ariaCloseLabel}} selected {{item.name}} file"> </lyte-file-close> </div> </template> <template is="for" items="{{queueList}}" item="item" index="index"> <div class="lyteFileUpdListFile {{concat(\'lyteFile\',lyteUiCapitalizeName(item.status))}}"> <div class="lyteFileUpdTypePreview"> <template is="if" value="{{lyteUiImageFile(item)}}"><template case="true"> <img class="lyteFileUpdThumb" src="{{item.src}}"> </template><template case="false"> <span class="lyteFileUpdTypeIcon {{item.fileType}}"></span> </template></template> </div> <lyte-text class="lyteFileUpdFileName" lt-prop-value="{{item.name}}"></lyte-text> <span class="lyteFileUpdFileSize">( {{lyteUiFileSize(item.size,ltPropFileUnit,ltPropDigits)}} )</span> <template is="if" value="{{expHandlers(item.percentage,\'!=\',undefined)}}"><template case="true"> <div class="lyteFileUpdFileStatus" data-completed="{{item.percentage}}"> <div class="lyteFileUpdProgressBar"> <div class="lyteFileUpdProgressFill" style="width: {{item.percentage}}%"></div> </div> </div> </template></template><template is="if" value="{{expHandlers(item.status,\'==\',&quot;error&quot;)}}"><template case="true"> <lyte-file-retry data-value="{{item.id}}" role="button"> <span class="lyteFileUpdFailMsg">{{lyteUiI18n(ltPropFailureMessage,"fileupload")}}</span> <template is="if" value="{{expHandlers(ltPropUploadMultiple,\'!\')}}"><template case="true"> <span class="lyteFileUpdRetryMsg">{{lyteUiI18n(ltPropRetryText,"fileupload")}}</span> </template></template> </lyte-file-retry> </template></template> <template is="if" value="{{item.lyteErrorMsg}}"><template case="true"><span class="lyteFileUpdFailMsg"> {{item.lyteErrorMsg}} </span></template></template> <template is="if" value="{{expHandlers(expHandlers(ltPropUploadMultiple,\'!\'),\'||\',expHandlers(expHandlers(expHandlers(item.status,\'!\'),\'||\',expHandlers(item.status,\'==\',&quot;error&quot;)),\'||\',expHandlers(item.status,\'==\',&quot;success&quot;)))}}"><template case="true"> <lyte-file-close aria-level="2" tabindex="0" aria-label="{{ariaCloseLabel}} selected {{item.name}} file" role="button" data-value="{{item.id}}"> </lyte-file-close> </template></template> </div> </template> </div> </template><template case="false"> <lyte-file-select-area aria-hidden="true"> <lyte-file-message class="lyteFileUpdMsgWrap {{if(expHandlers(queueList.length,\'||\',predefinedList.length),\'lyteHide\',\'\')}}"> <span class="lyteFileUpdMsg"> {{lyteUiI18n(ltPropMessage,"fileupload")}} </span> </lyte-file-message> <div class="lyteFileUpdList" tabindex="0" aria-level="2" aria-label="SelectedFile:{{ariaSelectedFiles}}"> <template is="for" items="{{predefinedList}}" item="item" index="index"> <div class="lyteFileUpdListFile"> <div class="lyteFileUpdTypePreview"> <template is="if" value="{{lyteUiImageFile(item)}}"><template case="true"> <img class="lyteFileUpdThumb" src="{{item.src}}"> </template><template case="false"> <span class="lyteFileUpdTypeIcon {{item.fileType}}"></span> </template></template> </div> <lyte-text class="lyteFileUpdFileName" lt-prop-value="{{item.name}}"></lyte-text> <span class="lyteFileUpdFileSize">( {{lyteUiFileSize(item.size,ltPropFileUnit,ltPropDigits)}} )</span> <lyte-file-close data-value="{{item.id}}" aria-label="{{ariaCloseLabel}} selected {{item.name}} file" role="button"> </lyte-file-close> </div> </template> <template is="for" items="{{queueList}}" item="item" index="index"> <div class="lyteFileUpdListFile {{concat(\'lyteFile\',lyteUiCapitalizeName(item.status))}}"> <div class="lyteFileUpdTypePreview"> <template is="if" value="{{lyteUiImageFile(item)}}"><template case="true"> <img class="lyteFileUpdThumb" src="{{item.src}}"> </template><template case="false"> <span class="lyteFileUpdTypeIcon {{item.fileType}}"></span> </template></template> </div> <lyte-text class="lyteFileUpdFileName" lt-prop-value="{{item.name}}"></lyte-text> <span class="lyteFileUpdFileSize">( {{lyteUiFileSize(item.size,ltPropFileUnit,ltPropDigits)}} )</span> <template is="if" value="{{expHandlers(item.percentage,\'!=\',undefined)}}"><template case="true"> <div class="lyteFileUpdFileStatus" data-completed="{{item.percentage}}"> <div class="lyteFileUpdProgressBar"> <div class="lyteFileUpdProgressFill" style="width: {{item.percentage}}%"></div> </div> </div> </template></template><template is="if" value="{{expHandlers(item.status,\'==\',&quot;error&quot;)}}"><template case="true"> <lyte-file-retry data-value="{{item.id}}" role="button"> <span class="lyteFileUpdFailMsg">{{lyteUiI18n(ltPropFailureMessage,"fileupload")}}</span> <span class="lyteFileUpdRetryMsg"> {{lyteUiI18n(ltPropRetryText,"fileupload")}} </span> </lyte-file-retry> </template></template> <lyte-file-close data-value="{{item.id}}" tabindex="0" aria-label="{{ariaCloseLabel}} selected {{item.name}} file" role="button"> </lyte-file-close> </div> </template> </div> </lyte-file-select-area> </template></template> </template></template> <template is="if" value="{{fileClass}}"><template case="true"><div ondragleave="{{action(\'drag\',event)}}" class="lyteFileDragWrapper"> </div></template></template> </div> <template is="if" value="{{ltPropAria}}"><template case="true"><span id="{{randomAriaId}}" style="display: none;"> SelectedFiles:{{ariaSelectedFiles}} </span></template></template> </template>',_dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[3]},{type:"attr",position:[3,1]},{type:"if",position:[3,1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"insertYield",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[{type:"text",position:[1,1,1,0]},{type:"componentDynamic",position:[1,1]},{type:"componentDynamic",position:[1]},{type:"attr",position:[3,1]},{type:"for",position:[3,1],dynamicNodes:[{type:"attr",position:[1,1,1]},{type:"if",position:[1,1,1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[1]}]}},default:{}},{type:"attr",position:[1,3]},{type:"componentDynamic",position:[1,3]},{type:"text",position:[1,5,1]},{type:"attr",position:[1,7]},{type:"componentDynamic",position:[1,7]}]},{type:"attr",position:[3,3]},{type:"for",position:[3,3],dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[1,1,1]},{type:"if",position:[1,1,1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[1]}]}},default:{}},{type:"attr",position:[1,3]},{type:"componentDynamic",position:[1,3]},{type:"text",position:[1,5,1]},{type:"attr",position:[1,7]},{type:"if",position:[1,7],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[1,1,1],attr:{style:{name:"style",helperInfo:{name:"concat",args:["'width: '","item.percentage","'%'"]}}}}]}},default:{}},{type:"attr",position:[1,8]},{type:"if",position:[1,8],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,1,0]},{type:"attr",position:[1,3]},{type:"if",position:[1,3],cases:{true:{dynamicNodes:[{type:"text",position:[1,0]}]}},default:{}},{type:"componentDynamic",position:[1]}]}},default:{}},{type:"attr",position:[1,10]},{type:"if",position:[1,10],cases:{true:{dynamicNodes:[{type:"text",position:[0,1]}]}},default:{}},{type:"attr",position:[1,12]},{type:"if",position:[1,12],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"componentDynamic",position:[1]}]}},default:{}}]}]},false:{dynamicNodes:[{type:"attr",position:[1,1]},{type:"text",position:[1,1,1,1]},{type:"componentDynamic",position:[1,1]},{type:"attr",position:[1,3]},{type:"attr",position:[1,3,1]},{type:"for",position:[1,3,1],dynamicNodes:[{type:"attr",position:[1,1,1]},{type:"if",position:[1,1,1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[1]}]}},default:{}},{type:"attr",position:[1,3]},{type:"componentDynamic",position:[1,3]},{type:"text",position:[1,5,1]},{type:"attr",position:[1,7]},{type:"componentDynamic",position:[1,7]}]},{type:"attr",position:[1,3,3]},{type:"for",position:[1,3,3],dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[1,1,1]},{type:"if",position:[1,1,1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[1]}]}},default:{}},{type:"attr",position:[1,3]},{type:"componentDynamic",position:[1,3]},{type:"text",position:[1,5,1]},{type:"attr",position:[1,7]},{type:"if",position:[1,7],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[1,1,1],attr:{style:{name:"style",helperInfo:{name:"concat",args:["'width: '","item.percentage","'%'"]}}}}]}},default:{}},{type:"attr",position:[1,8]},{type:"if",position:[1,8],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,1,0]},{type:"text",position:[1,3,1]},{type:"componentDynamic",position:[1]}]}},default:{}},{type:"attr",position:[1,10]},{type:"componentDynamic",position:[1,10]}]},{type:"componentDynamic",position:[1]}]}},default:{}}]}},default:{}},{type:"attr",position:[3,3]},{type:"if",position:[3,3],cases:{true:{dynamicNodes:[{type:"attr",position:[0]}]}},default:{}},{type:"attr",position:[5]},{type:"if",position:[5],cases:{true:{dynamicNodes:[{type:"attr",position:[0]},{type:"text",position:[0,1]}]}},default:{}}],_observedAttributes:["ltPropName","ltPropMultiple","ltPropAccept","ltPropId","ltPropClass","ltPropAppearance","ltPropDisabled","ltPropYield","ltPropFileLimit","ltPropMinimumFileSize","ltPropTotalFilesSize","ltPropParallel","ltPropAutoUpload","ltPropTriggerUpload","ltPropParamName","ltPropThumb","ltPropTabindex","ltPropRetry","ltPropFileUnit","ltPropDigits","ltPropMessage","ltPropFailureMessage","ltPropRetryText","ltPropFiles","ltPropFolder","ltPropChunk","ltPropChunkSize","ltPropParallelChunkUpload","ltPropParallelChunkCount","ltPropChunkRetry","ltPropUploadMultiple","ltPropUploadMultipleCount","ltPropAjax","ltPropAllowReplace","ltPropFilesCount","ltPropAriaAttributes","ltPropReset","ltPropPreventDuplicate","ltPropListErrorFiles","ltPropResetFileValue","ltPropAria","ltPropDataTabindex","ltPropValidateByExt","ltPropRenameDuplicateFile","queueList","predefinedList","currentUpload","chunkUpload","fileClass","chunkCount","abort","lxhrs","uploadedFiles","manualUpdFiles","uploadMultipleRetry","retryFiles","retry","manualUpload","totalFilesSize","curTotFilesSize","ariaCloseLabel","commonAriaLabel","ariaSelectedFiles","randomAriaId"],init:function(){this.getMethods("beforeRender")&&this.executeMethod("beforeRender",this.$node)},didConnect:function(){this._file=this.$node.querySelector("input.fileuploadInput"),this.$node.upload=this.processqueue.bind(this),this.$node.removeUpload=function(e){e?this.removeFrmUpload(e,"queueList"):this.removeFrmUpload(this.data.queueList,"queueList",!0),this._file.value=""}.bind(this),this.$node.predefined=function(e){Array.isArray(e)||(e=[e]);for(var t=0;t<e.length;t++)Lyte.arrayUtils(this.data.predefinedList,"push",e[t])}.bind(this),this.$node.addFiles=function(e){Array.isArray(e)||(e=[e]),this.validate(e)}.bind(this),this.$node.openSelection=function(){this._file.click()}.bind(this),this.folderUpload(),this.getMethods("afterRender")&&this.executeMethod("afterRender",this.$node)},didDestroy:function(){this.$node.removeUpload(),this._triggerId&&(clearTimeout(this._triggerId),delete this._triggerId),this._resetId&&(clearTimeout(this._resetId),delete this._resetId),delete this._file,delete this.$node.upload,delete this.$node.removeUpload,delete this.$node.predefined,delete this.$node.addFiles,delete this.$node.openSelection},addAriaForButton:function(e,t,i,a){e.hasOwnProperty(t)&&(a=e[t],delete e[t]),this.setData(i,a)},addAriaValues:function(e){var t=this.data.commonAriaLabel,i=this.$node.querySelector(".fileUploadWrapper");e=Object.assign({},e),this.addAriaForButton(e,"close-label","ariaCloseLabel","remove"),_lyteUiUtils.setAttribute(i,e,t),this.setData("commonAriaLabel",e)},ariaObserver:function(e){var t=this.data.ltPropAriaAttributes;this.data.ltPropAria&&(e||this.setData("randomAriaId","file"+(new Date).getTime()+parseInt(1e11*Math.random())),this.addAriaValues(t))}.observes("ltPropAriaAttributes.*").on("didConnect"),disableDataObserver:function(){var e=this.data.ltPropDisabled,t=this.$node.querySelector(".fileUploadWrapper");e?t.setAttribute("aria-disabled",!0):t.removeAttribute("aria-disabled")}.observes("ltPropDisabled").on("didConnect"),data:function(){return{ltPropName:Lyte.attr("string",{default:"file"}),ltPropMultiple:Lyte.attr("boolean",{default:!0}),ltPropAccept:Lyte.attr("string",{default:""}),ltPropId:Lyte.attr("string",{default:""}),ltPropClass:Lyte.attr("string",{default:""}),ltPropAppearance:Lyte.attr("string",{default:_lyteUiUtils.resolveDefaultValue("lyte-fileupload","appearance","Box")}),ltPropDisabled:Lyte.attr("boolean",{default:!1}),ltPropYield:Lyte.attr("boolean",{default:!1}),ltPropFileLimit:Lyte.attr("number",{default:_lyteUiUtils.resolveDefaultValue("lyte-fileupload","fileLimit",void 0)}),ltPropMinimumFileSize:Lyte.attr("number",{default:_lyteUiUtils.resolveDefaultValue("lyte-fileupload","minimumFileSize",0)}),ltPropTotalFilesSize:Lyte.attr("string"),ltPropParallel:Lyte.attr("number",{default:2}),ltPropAutoUpload:Lyte.attr("boolean",{default:!0}),ltPropTriggerUpload:Lyte.attr("boolean",{default:!1}),ltPropParamName:Lyte.attr("string",{default:_lyteUiUtils.resolveDefaultValue("lyte-fileupload","paramName","file")}),ltPropThumb:Lyte.attr("boolean",{default:!1}),ltPropTabindex:Lyte.attr("number",{default:0}),ltPropRetry:Lyte.attr("number",{default:_lyteUiUtils.resolveDefaultValue("lyte-fileupload","retry",2)}),ltPropFileUnit:Lyte.attr("string",{default:""}),ltPropDigits:Lyte.attr("number",{default:_lyteUiUtils.resolveDefaultValue("lyte-fileupload","digits",1)}),ltPropMessage:Lyte.attr("string",{default:_lyteUiUtils.resolveDefaultValue("lyte-fileupload","message","Drag file here or browse to upload")}),ltPropFailureMessage:Lyte.attr("string",{default:_lyteUiUtils.resolveDefaultValue("lyte-fileupload","failureMessage","Attachment failed")}),ltPropRetryText:Lyte.attr("string",{default:_lyteUiUtils.resolveDefaultValue("lyte-fileupload","retryText","Retry")}),ltPropFiles:Lyte.attr("array",{default:[]}),ltPropFolder:Lyte.attr("boolean",{default:!1}),ltPropChunk:Lyte.attr("boolean",{default:!1}),ltPropChunkSize:Lyte.attr("number",{default:2e6}),ltPropParallelChunkUpload:Lyte.attr("boolean",{default:!1}),ltPropParallelChunkCount:Lyte.attr("number",{default:1/0}),ltPropChunkRetry:Lyte.attr("number",{default:2}),ltPropUploadMultiple:Lyte.attr("boolean",{default:!1}),ltPropUploadMultipleCount:Lyte.attr("number",{default:1/0}),ltPropAjax:Lyte.attr("object",{default:{url:""}}),ltPropAllowReplace:Lyte.attr("boolean",{default:!1}),ltPropFilesCount:Lyte.attr("number",{default:1/0}),ltPropAriaAttributes:Lyte.attr("object",{default:_lyteUiUtils.resolveDefaultValue("lyte-fileupload","ariaAttributes",{role:"button","aria-roledescription":"fileupload"}),watch:!0}),ltPropReset:Lyte.attr("boolean",{default:!1}),ltPropPreventDuplicate:Lyte.attr("boolean",{default:!1}),ltPropListErrorFiles:Lyte.attr("boolean",{default:!1}),ltPropResetFileValue:Lyte.attr("boolean",{default:!1}),ltPropAria:Lyte.attr("boolean",{default:!1}),ltPropDataTabindex:Lyte.attr("string",{default:""}),ltPropValidateByExt:Lyte.attr("boolean",{default:!1}),ltPropRenameDuplicateFile:Lyte.attr("boolean",{default:!1}),queueList:Lyte.attr("array",{default:[]}),predefinedList:Lyte.attr("array",{default:[]}),currentUpload:Lyte.attr("array",{default:[]}),chunkUpload:Lyte.attr("array",{default:[]}),fileClass:Lyte.attr("string",{default:""}),chunkCount:Lyte.attr("number",{default:0}),abort:Lyte.attr("boolean",{default:!1}),lxhrs:Lyte.attr("array",{default:[]}),uploadedFiles:Lyte.attr("array",{default:[]}),manualUpdFiles:Lyte.attr("array",{default:[]}),uploadMultipleRetry:Lyte.attr("number",{default:0}),retryFiles:Lyte.attr("array",{default:[]}),retry:Lyte.attr("boolean",{default:!1}),manualUpload:Lyte.attr("boolean",{default:!1}),totalFilesSize:Lyte.attr("number"),curTotFilesSize:Lyte.attr("number",{default:0}),ariaCloseLabel:Lyte.attr("string"),commonAriaLabel:Lyte.attr("object",{default:{}}),ariaSelectedFiles:Lyte.attr("string",{default:"0"}),randomAriaId:Lyte.attr("string")}},getFileDataAsString:function(e){var t="",i=Lyte.Component.registeredHelpers.lyteUiFileSize,a=this.data.ltPropFileUnit,l=this.data.ltPropDigits;return e.forEach((function(e){t+="name "+e.name+" size "+i(e.size,a,l)+" "})),t},constructAriaString:function(){if(this.data.ltPropAria){var e=this.getFileDataAsString(this.data.predefinedList);(e=this.getFileDataAsString(this.data.queueList))?this.setData("ariaSelectedFiles",e):this.setData("ariaSelectedFiles","0")}},constructReasonAsStr:function(e){var t="";return e.fileCount?t="Allowed File Count "+this.data.ltPropFilesCount:e.duplicate?t="The file name already exist":e.type&&(t="Invalid file type"),e.size?t=(t?t+" and ":"")+"Invalid file size":e.totalSize&&(t=(t?t+" and ":"")+"Exceeds total file size"),t},exceedTotalCount:function(){var e=this.data.ltPropFilesCount;return e!==1/0&&!((this.data.predefinedList||[]).length+this.getValidQueueListCount()<e)},folderUpload:function(){this.data.ltPropFolder?this._file.setAttribute("webkitdirectory",!0):this._file.removeAttribute("webkitdirectory")},validateAndGetType:function(e,t,i){var a,l,s=new RegExp(this.data.ltPropAccept.replace(/\s+/g,"").split(",").join("|")),r="";return e&&(l="."+(r=e.substring(e.lastIndexOf(".")+1,e.length))),!this.data.ltPropValidateByExt&&s.test(t)?a=(a=t.match(/(video|image|pdf|zip)/gi))&&a[0]?a[0]:r:s.test(r)||s.test(l)?a=r:i.type="Invalid_Type",a},validateSize:function(e,t){e.size<this.data.ltPropMinimumFileSize?t.size="Lower_Size":e.size>this.data.ltPropFileLimit?t.size="Higher_Size":this.checkTotalFilessize(e.size)&&(t.totalSize="Exceeds")},checkFileName:function(e,t){return e===t.name},findDuplicateInArray:function(e,t){return this.findIndex(e,this.checkFileName.bind(this,t))>-1},validateDuplicateFile:function(e,t){if(this.data.ltPropPreventDuplicate){var i=this.data.predefinedList,a=this.data.queueList,l=e.name,s=this.findDuplicateInArray(i,l);if(s=s||this.findDuplicateInArray(a,l))return t.duplicate=!0,!1}return!0},folderUploadObserver:function(){this.folderUpload()}.observes("ltPropFolder"),trigUpl:function(e){if(e.newValue){this.processqueue();var t=this;this._triggerId=setTimeout((function(){t.setData("ltPropTriggerUpload",!1),delete t._triggerId}),0)}}.observes("ltPropTriggerUpload"),resetObserver:function(e){if(e.newValue){this.$node.removeUpload();var t=this;this._resetId=setTimeout((function(){t.setData("ltPropReset",!1),delete t._resetId}),0)}}.observes("ltPropReset"),validate:function(e){for(var t=[],i=!1,a=this.data.ltPropListErrorFiles,l=0;l<e.length;l++){var s,r={},o=this.data.ltPropChunk,n=e[l].name,d=e[l].type;if(this.exceedTotalCount()?(r.fileCount="Exceeds",s=d||n.substring(n.lastIndexOf(".")+1,n.length)):this.validateDuplicateFile(e[l],r)&&(s=this.validateAndGetType(n,d,r),this.validateSize(e[l],r)),Object.keys(r).length>0){var p=e[l],u=a?this.constructFileObject(p,o,s,this.constructReasonAsStr(r)):void 0;if(i=!0,this.getMethods("onReject")&&this.executeMethod("onReject",p,r,this.$node,u),a)Lyte.arrayUtils(this.data.queueList,"push",u);else if(r.fileCount)break}else{var h;u=this.constructFileObject(e[l],o,s);if(this.getMethods("onBeforeAdd")&&(h=this.executeMethod("onBeforeAdd",e[l],this.$node,u)),0==h){i=!0,a&&(u.lyteErrorMsg=u.lyteErrorMsg||"Invalid File",Lyte.arrayUtils(this.data.queueList,"push",u));continue}if(h&&h.then){t.push(h);var c=e[l];Promise.resolve(h).then(this.add.bind(this,c,o,s))}else this.add(e[l],u);if(!this.data.ltPropMultiple)break}}(i||this.data.ltPropResetFileValue)&&(this._file.value=""),this.getMethods("onValidationEnd")&&this.executeMethod("onValidationEnd",this.$node,this.data.queueList),this.data.ltPropAutoUpload&&(t.length?Lyte.resolvePromises(t).then(this.processqueue.bind(this)):this.processqueue()),this.constructAriaString()},getValidQueueListCount:function(){var e=this.data.queueList;return this.data.ltPropListErrorFiles?e.filter((function(e){return!e.lyteErrorMsg})).length:e.length},changeFileName:function(e){if(this.data.ltPropRenameDuplicateFile){var t=[],i=this.data.predefinedList,a=this.data.queueList,l=e.name;if(i.reduce((function(e,t){return e.push(t.name),e}),t),a.reduce((function(e,t){return e.push(t.name),e}),t),t.indexOf(l)>-1){for(var s,r,o,n=l.lastIndexOf("."),d=l.substring(0,n),p=l.substring(n+1,l.length),u="",h="",c="",y=d.length-1;y>0;y--){var f=d[y];if(r){if("("===f){o=!0,s=y;break}if(!f.match(/[0-9]/))break;h=f+h}else")"===f?r=!0:f.match(/\s/)&&(u=f+u)}for(h=o&&h?parseInt(h)+1:1,c=(o?d.substring(0,s)+"("+h+")"+u:d+"("+h+")")+"."+p;t.indexOf(c)>-1;)++h,c=(o?d.substring(0,s)+"("+h+")"+u:d+"("+h+")")+"."+p;e.name=c}}},constructFileObject:function(e,t,i,a){var l={id:"lyte"+(new Date).getTime()+parseInt(1e11*Math.random()),file:e,size:e.size,name:e.name,isChunk:t,retry:0,fileType:i||"document"};return this.data.ltPropThumb&&/image/i.test(e.type)&&Lyte.Component.set(l,"src",URL.createObjectURL(e)),a?l.lyteErrorMsg=a:this.changeFileName(l),l},add:function(e,t){Lyte.arrayUtils(this.data.queueList,"push",t),this.addToTotalFilesSize(e.size),Lyte.arrayUtils(this.data.uploadedFiles,"push",t),Lyte.arrayUtils(this.data.ltPropFiles,"push",e),this.getMethods("onAdd")&&this.executeMethod("onAdd",e,this.$node,t)},chkId:function(e,t){return t.id==e},SendingFile:function(){for(var e=this.data,t=e.manualUpdFiles,i=0;i<t.length;){var a=t[i];if(!a.status||a.isChunk&&"uploading"==a.status)if(a.isChunk){if(!a.status){this.setData("manualUpload",!0),this.uploadFile(a);break}if(a.finished+a.currentUploadingChunks<a.chunks.length){this.setData("manualUpload",!0),this.uploadFile(a);break}i++}else{if(!(e.currentUpload.length<e.ltPropParallel))break;this.setData("manualUpload",!0),Lyte.arrayUtils(e.currentUpload,"push",a),this.uploadFile(a),i++}else i++}i===t.length&&this.finishcallback(t)},processqueue:function(e,t,i){var a=this.data,l=0,s=[];if(e&&!i){Array.isArray(e)||(e=[e]);for(var r=0;r<e.length;r++){var o=e[r].id||e[r],n=a.queueList[this.findIndex(a.queueList,this.chkId.bind(this,o))];n&&Lyte.arrayUtils(this.data.manualUpdFiles,"push",n)}if(this.data.manualUpdFiles.length)return void this.SendingFile()}if(a.manualUpload)this.SendingFile();else{for(;a.currentUpload.length<a.ltPropParallel||a.ltPropUploadMultiple&&a.currentUpload.length<a.ltPropUploadMultipleCount||i&&a.queueList.length;){var d=a.queueList[l];if(e&&(e="object"==typeof e?e.id:e,d=a.queueList[this.findIndex(a.queueList,this.chkId.bind(this,e))],i&&d))return Lyte.arrayUtils(this.data.retryFiles,"push",d),Lyte.Component.set(d,"status","reloading"),void(a.uploadedFiles.indexOf(d)<0&&(Lyte.arrayUtils(this.data.uploadedFiles,"push",d),this.retrySendingFile()));if(!d){this.data.retryFiles.length&&this.retrySendingFile(),t&&this.finishcallback();break}if(/uploading|success/.test(d.status)){if(e)break;if(/uploading/.test(d.status)&&d.isChunk&&d.finished+d.currentUploadingChunks<d.chunks.length){this.processChunkQueue(d.chunks);break}l++}else if("error"!=d.status||!(this.data.ltPropUploadMultiple||d.retry>=a.ltPropRetry-1||d.isChunk)||e)if("reloading"!=d.status)if(d.lyteErrorMsg)l++;else{if(d.isChunk||Lyte.arrayUtils(a.currentUpload,"push",d),this.data.ltPropUploadMultiple)s.push(d);else if(this.uploadFile(d),e||d.isChunk)break;l++}else l++;else l++}this.data.ltPropUploadMultiple&&s.length&&this.uploadFile(s)}},retrySendingFile:function(){for(var e=this.data,t=e.retryFiles,i=0;i<t.length;){var a=t[i];if("reloading"==a.status||"uploading"==a.status)if(a.isChunk){if(a.finished+a.currentUploadingChunks<a.chunks.length){this.setData("retry",!0),this.processChunkQueue(a.chunks);break}i++}else{if(!(e.currentUpload.length<e.ltPropParallel))break;this.setData("retry",!0),Lyte.arrayUtils(t,"removeAt",i),Lyte.arrayUtils(e.currentUpload,"push",a),this.getMethods("onRetry")&&this.executeMethod("onRetry",{},a,this.$node),this.uploadFile(a)}else Lyte.arrayUtils(t,"removeAt",i)}t.length||(this.setData("retry",!1),this.processqueue(void 0,!0))},findIndex:function(e,t){if("function"!=typeof t)return e.indexOf(t);for(var i=0;i<e.length;i++){if(t.call(e[i],e[i]))return i}},abortChunksFrmUpload:function(e){for(var t=this.data.chunkUpload,i=0;i<t.length;){var a=t[i];a.chunkProp.origin.id===e&&a.xhr?(this.setData("abort",!0),a.xhr.ret.abort()):i++}},removeFrmUpload:function(e,t,i,a){Array.isArray(e)||(e=[e]);for(var l=0;l<e.length;l++){var s,r,o=e[l].id||e[l],n=this.data[t],d=this.findIndex(n,this.chkId.bind(this,o));if((void 0===d||d<0)&&(n=this.data.predefinedList,(d=this.findIndex(n,this.chkId.bind(this,o)))>-1&&(t="predefinedList")),d>=0){if(!i&&this.getMethods("onBeforeRemove")&&0==this.executeMethod("onBeforeRemove",t,n[d],this.$node))continue;if("uploading"==(r=n[d]).status&&(s=!0,r.xhr&&(this.setData("abort",!0),r.xhr.ret.abort()),r.isChunk&&this.abortChunksFrmUpload(r.id)),Lyte.arrayUtils(n,"removeAt",d),"queueList"===t){var p,u=this.getData("lxhrs"),h=$L.search(u,"fileId",r.id)[0];r.isChunk&&s&&this.getMethods("onFileFailure")&&this.executeMethod("onFileFailure",h,r,this.$node,!0),r.lyteErrorMsg||(Lyte.arrayUtils(this.data.ltPropFiles,"removeAt",d),this.removeFromTotalFileSize(r.size));var c=this.data.uploadedFiles;(y=this.findIndex(c,this.chkId.bind(this,o)))>=0&&Lyte.arrayUtils(c,"removeAt",y);var y;c=this.data.retryFiles;(y=this.findIndex(c,this.chkId.bind(this,o)))>=0&&Lyte.arrayUtils(c,"removeAt",y),(p=u.indexOf(h))>-1&&Lyte.arrayUtils(u,"removeAt",p),d<=l&&l--}!i&&this.getMethods("onRemove")&&this.executeMethod("onRemove",t,r,this.$node)}}!this.data.ltPropUploadMultiple&&("queueList"==t&&s||a)&&(this.data.retry?this.retrySendingFile():this.processqueue(void 0,!0)),"queueList"!==t&&"predefinedList"!==t||this.constructAriaString()},uploadFile:function(e){var t=Lyte.deepCopyObject(this.data.ltPropAjax);e.isChunk?this.proceedChunk(e,t):this.proceedUpload(e,t,!1)},succFunc:function(e){if(this.$node){var t,i=arguments[2].xhr.file,a=arguments[2].xhr.ret,l=[];i.xhr&&delete i.xhr,this.getMethods("onRequestSuccess")&&this.executeMethod("onRequestSuccess",a,i,this.$node),Array.isArray(i)||(i=[i]);for(var s=0;s<i.length;s++)if(Lyte.Component.set(i[s],"status","success"),Lyte.objectUtils(i[s],"delete","xhr"),this.data.ltPropUploadMultiple)l.push(i[s].id),this.removeFrmUpload(i[s].id,"currentUpload",!0);else{var r=this.getData("lxhrs");(t=$L.search(r,"fileId",i[s].id)).length&&Lyte.arrayUtils(r,"removeAt",r.indexOf(t[0])),a.fileId=i[s].id,Lyte.arrayUtils(this.getData("lxhrs"),"push",a),this.getMethods("onFileSuccess")&&this.executeMethod("onFileSuccess",a,i[s],this.$node),this.removeFrmUpload(i[s].id,"currentUpload",!0,!0)}this.data.ltPropUploadMultiple&&(a.fileId=l,Lyte.arrayUtils(this.getData("lxhrs"),"push",a),this.setData("uploadMultipleRetry",0),this.processqueue(void 0,!0)),delete arguments[2].xhr.file}},reject:function(e){if(this.$node){var t,i=e.xhr.file,a=e.xhr.ret,l=i.retry,s=[];if(this.data.abort||l>=this.data.ltPropRetry||this.data.ltPropUploadMultiple&&this.data.uploadMultipleRetry>=this.data.ltPropRetry){i.xhr&&delete i.xhr,this.getMethods("onRequestFailure")&&this.executeMethod("onRequestFailure",a,i,this.$node,this.data.abort),Array.isArray(i)||(i=[i]);for(var r=0;r<i.length;r++){if(Lyte.Component.set(i[r],"status","error"),Lyte.objectUtils(i[r],"delete","xhr"),this.data.ltPropUploadMultiple)s.push(i[r].id);else{var o=this.getData("lxhrs");(t=$L.search(o,"fileId",i[r].id)).length&&Lyte.arrayUtils(o,"removeAt",o.indexOf(t[0])),a.fileId=i[r].id,this.getMethods("onFileFailure")&&this.executeMethod("onFileFailure",a,i[r],this.$node,this.data.abort),!this.data.abort&&Lyte.arrayUtils(this.getData("lxhrs"),"push",a)}this.removeFrmUpload(i[r].id,"currentUpload",!0,!this.data.abort)}this.data.ltPropUploadMultiple&&(a.fileId=s,Lyte.arrayUtils(this.getData("lxhrs"),"push",a),this.setData("uploadMultipleRetry",0),this.processqueue(void 0,!0)),this.data.abort&&(Lyte.objectUtils(e.xhr.file,"add","retry",this.data.ltPropRetry),this.setData("abort",!1)),delete e.xhr.file}else if(this.data.ltPropUploadMultiple){delete i.xhr;for(r=0;r<i.length;r++)Lyte.Component.set(e.xhr.file[r],"status","retrying"),Lyte.Component.set(e.xhr.file[r],"retry",e.xhr.file[r].retry+1);this.setData("uploadMultipleRetry",this.data.uploadMultipleRetry+1),this.getMethods("onRetry")&&this.executeMethod("onRetry",a,i,this.$node),this.uploadFile(i)}else Lyte.Component.set(e.xhr.file,"status","retrying"),Lyte.objectUtils(e.xhr.file,"add","retry",l+1),this.getMethods("onRetry")&&this.executeMethod("onRetry",a,i,this.$node),this.uploadFile(i)}},progress:function(e){if(e.lengthComputable){var t=e.total,i=e.loaded,a=e.target.xhr,l=a.file;Array.isArray(l)||(l=[l]);for(var s=0;s<l.length;s++)this.data.ltPropUploadMultiple?Lyte.Component.set(l[s],{loaded:l[s].size,percentage:100}):Lyte.Component.set(l[s],{loaded:i,percentage:Math.round(100*i/t)}),this.getMethods("onProgress")&&this.executeMethod("onProgress",e,a,l[s],this.$node)}},removeChunk:function(e,t,i){var a=this.data.chunkUpload,l=this.findIndex(a,(function(t){return t.chunkProp.chunkId==e}));l>-1&&(Lyte.arrayUtils(a,"removeAt",l),!i&&this.processChunkQueue(t.chunks))},chunkReject:function(e){if(this.$node){var t=e.xhr.file,i=t.chunkProp.origin,a=arguments[0].xhr.ret;if(!this.data.abort&&t.retry<this.data.ltPropChunkRetry)Lyte.Component.set(t,"status","retrying"),Lyte.objectUtils(t,"add","retry",t.retry+1),this.removeChunk(t.chunkProp.chunkId,i,!0),this.getMethods("onRetry")&&this.executeMethod("onRetry",a,t,this.$node),Lyte.Component.set(i,"currentUploadingChunks",i.currentUploadingChunks-1),this.processChunkQueue(t,!0);else{if(this.getMethods("onRequestFailure")&&this.executeMethod("onRequestFailure",a,t,this.$node,this.data.abort),Lyte.Component.set(t,"status","error"),this.removeChunk(t.chunkProp.chunkId,i,!0),this.getMethods("onChunkError")&&this.executeMethod("onChunkError",a,t,i,this.$node,this.data.abort),Lyte.objectUtils(t,"delete","xhr"),delete e.xhr.file,Lyte.Component.set(i,"currentUploadingChunks",i.currentUploadingChunks-1),Lyte.Component.set(i,"error",i.error+1),"error"!=i.status){var l,s=this.getData("lxhrs");Lyte.Component.set(i,"status","error"),(l=$L.search(s,"fileId",i.id)).length&&Lyte.arrayUtils(s,"removeAt",s.indexOf(l[0])),a.fileId=i.id,Lyte.arrayUtils(this.getData("lxhrs"),"push",a)}this.data.abort?this.setData("abort",!1):(this.abortChunksFrmUpload(i.id),this.getMethods("onFileFailure")&&this.executeMethod("onFileFailure",a,i,this.$node,this.data.abort),this.data.retry?this.retrySendingFile():this.processqueue(void 0,!0))}}},chunkSuccess:function(e){if(this.$node){var t=arguments[2].xhr.file,i=t.chunkProp.origin,a=arguments[2].xhr.ret;if(this.getMethods("onRequestSuccess")&&this.executeMethod("onRequestSuccess",a,t,this.$node),Lyte.Component.set(t,"status","success"),this.removeChunk(t.chunkProp.chunkId,i,!0),this.getMethods("onChunkSuccess")&&this.executeMethod("onChunkSuccess",a,t,i,this.$node),Lyte.objectUtils(t,"delete","xhr"),delete arguments[2].xhr.file,Lyte.Component.set(i,"finished",i.finished+1),Lyte.Component.set(i,"currentUploadingChunks",i.currentUploadingChunks-1),i.finished==i.total){var l,s=this.getData("lxhrs");Lyte.Component.set(i,"status","success"),(l=$L.search(s,"fileId",i.id)).length&&Lyte.arrayUtils(s,"removeAt",s.indexOf(l[0])),a.fileId=i.id,Lyte.arrayUtils(this.getData("lxhrs"),"push",a),this.getMethods("onFileSuccess")&&this.executeMethod("onFileSuccess",a,i,this.$node),this.data.retry?this.retrySendingFile():this.processqueue(void 0,!0)}else this.processChunkQueue(i.chunks,!0)}},chunkProgress:function(e){if(e.lengthComputable){e.total;var t=e.loaded,i=e.target.xhr.file,a=i.chunkProp.origin,l=t-i.loaded;Lyte.Component.set(i,"loaded",t),Lyte.Component.set(a,{loaded:Math.min(a.loaded+l,a.size),percentage:Math.min(Math.round(100*(a.loaded+l)/a.size),100)}),this.getMethods("onProgress")&&this.executeMethod("onProgress",e,e.target.xhr,a,this.$node)}},proceedChunk:function(e,t){for(var i=this.data,a=i.ltPropChunkSize,l=e.size,s=0,r=[];s<=l;){var o=s,n=Math.min(l,s+=a),d=n-o;r.push({file:e.file.slice(o,n),chunkProp:{chunkOffset:o,chunkEnd:n,chunkSize:d,chunkId:"lyteChunk"+(new Date).getTime()+parseInt(1e11*Math.random()),chunkIndex:r.length,origin:e,chunkCount:Math.ceil(e.size/a),totalSize:e.size},name:e.file.name,loaded:0,retry:0})}Lyte.Component.set(e,{chunks:r,error:0,finished:0,total:r.length}),i.ltPropParallelChunkCount===1/0&&this.setData("chunkCount",r.length),this.processChunkQueue(r)},processChunkQueue:function(e,t){var i=this.data,a=0;for(Array.isArray(e)||(e=[e]);!i.ltPropParallelChunkUpload&&i.chunkUpload.length<1||i.ltPropParallelChunkUpload&&i.ltPropParallelChunkCount===1/0||i.ltPropParallelChunkCount!=1/0&&i.chunkUpload.length<i.ltPropParallelChunkCount;){var l=e[a];if(!l){i.retry?this.retrySendingFile():i.ltPropParallelChunkUpload&&(i.ltPropParallelChunkCount!=1/0&&i.chunkUpload.length<i.ltPropParallelChunkCount&&this.processqueue(),i.ltPropParallelChunkCount==1/0&&this.processqueue());break}if(/success|uploading/.test(l.status)||t&&(!t||/error/.test(l.status)))a++;else{var s=l.chunkProp.origin;Lyte.Component.set(s,{status:"uploading",percentage:s.percentage||0,loaded:s.loaded||0,size:s.size,currentUploadingChunks:s.currentUploadingChunks+1||1}),this.proceedUpload(l,Lyte.deepCopyObject(i.ltPropAjax),!0),Lyte.arrayUtils(i.chunkUpload,"push",l),a++}}},getRelativePath:function(e){var t=e.file;return t.webkitRelativePath||t.relativePath},proceedUpload:function(e,t,i){if(!/success|uploading/.test(e[0]&&e[0].status||e.status)){var a,l,s=new FormData,r=["chunkOffset","chunkSize","chunkIndex","chunkCount","totalSize"];if(Array.isArray(e))for(var o=0;o<e.length;o++)l=this.data.ltPropFolder?this.getRelativePath(e[o]):e[o].name,s.append(this.data.ltPropParamName+"["+o+"]",e[o].file,l);else l=this.data.ltPropFolder&&!i?this.getRelativePath(e):e.name,s.append(this.data.ltPropParamName,e.file,l);if(i){for(var n=0;n<r.length;n++)s.append(r[n],e.chunkProp[r[n]]);var d=e.chunkProp.origin;s.append("fileId",d.id),l=this.data.ltPropFolder?this.getRelativePath(d):d.name,s.append("fileName",l)}t.success=i?this.chunkSuccess.bind(this):this.succFunc.bind(this),t.error=i?this.chunkReject.bind(this):this.reject.bind(this);var p=new XMLHttpRequest;if(t.type="POST",e.xhr=p,p.file=e,p.upload.xhr=p,p.upload.addEventListener("progress",i?this.chunkProgress.bind(this):this.progress.bind(this),!1),t.xhr=p,t.data=s,t.processData=!1,t.contentType=!1,this.getMethods("onBeforeSend")&&(a=this.executeMethod("onBeforeSend",p,e,i,this.$node,s,t)),a&&a.then)Promise.resolve(a).then(function(){this.finishSend(t,p,e)}.bind(this));else{if(0==a){Array.isArray(e)||(e=[e]);for(var u=0;u<e.length;u++)this.removeFrmUpload(e[u].id,"currentUpload",!0);return}a&&a instanceof FormData&&(t.data=a),this.finishSend(t,p,e,i)}}},finishSend:function(e,t,i,a){if(Array.isArray(i))for(var l=0;l<i.length;l++)Lyte.Component.set(i[l],"status","uploading");else Lyte.Component.set(i,"status","uploading");var s=$L.ajax(e);s.xhr=t,t.ret=s,this.getMethods("onSend")&&this.executeMethod("onSend",t,s,i,!!a,this.$node,e)},finishcallback:function(e){var t,i=e||this.data.uploadedFiles,a=this.data.chunkUpload,l=this.data.lxhrs;if(i.length){for(var s=0;s<i.length;s++){if(!i[s].status||"uploading"==i[s].status)return;"error"==i[s].status&&(t=!0)}for(s=0;s<a.length;s++){if("uploading"==a[s].status)return;"error"==a[s].status&&(t=!0)}this.data.ltPropMultiple||(i=i[0],l=l[0]),t?(this.getMethods("onFailure")&&this.executeMethod("onFailure",i,this.$node,l),this.setData("uploadedFiles",[]),this.setData("lxhrs",[])):(this.getMethods("onSuccess")&&this.executeMethod("onSuccess",i,this.$node,l),this.setData("uploadedFiles",[]),this.setData("lxhrs",[])),1==this.data.manualUpload&&(this.setData("manualUpdFiles",[]),this.setData("manualUpload",!1))}},convertToBytes:function(){var e=this.getData("ltPropTotalFilesSize");if(e){var t=e.substring(e.length-2),i=parseInt(e.substring(0,e.length-2)),a=["KB","MB","GB"].indexOf(t),l=this.data.predefinedList;a>-1&&this.setData("totalFilesSize",i*Math.pow(1e3,a+1)),Array.isArray(l)&&this.addPredefinedListSize(l)}}.observes("ltPropTotalFilesSize").on("init"),getTotalFileSize:function(e){var t=0;return e.forEach((function(e){var i=e.size;"number"==typeof i&&(t+=i)})),t},addPredefinedListSize:function(e){var t=this.getTotalFileSize(e);this.addToTotalFilesSize(t)},removePredefindListSize:function(e){var t=this.getTotalFileSize(e);this.removeFromTotalFileSize(t)},predefinedListObserver:function(e){if(this.getData("totalFilesSize")){var t=e.oldValue,i=e.newValue;Array.isArray(t)&&this.removePredefindListSize(t),Array.isArray(i)&&this.addPredefinedListSize(i)}}.observes("predefinedList"),predefinedArrayListObserver:function(e){if(this.getData("totalFilesSize")){var t=e.removedItems,i=e.insertedItems;Array.isArray(t)&&this.removePredefindListSize(t),Array.isArray(i)&&this.addPredefinedListSize(i)}}.observes("predefinedList.[]"),checkTotalFilessize:function(e){var t=this.getData("totalFilesSize"),i=this.getData("curTotFilesSize");return!!(t&&i+e>t)},addToTotalFilesSize:function(e){if(this.getData("totalFilesSize")){var t=this.getData("curTotFilesSize");this.setData("curTotFilesSize",t+e)}},removeFromTotalFileSize:function(e){if(this.getData("totalFilesSize")){var t=this.getData("curTotFilesSize");this.setData("curTotFilesSize",t-e)}},openFileWindow:function(e,t){if(!this.data.ltPropYield&&this.data.ltPropMultiple&&(e.shiftKey?e.preventDefault():$L("#lyteFileUpdSelectedFile.lyteFileUpdListFile",this.$node).removeAttr("id"),"lyteFileUpdRetryMsg"!=e.target.className&&$L(e.target).closest(".lyteFileUpdListFile").attr("id","lyteFileUpdSelectedFile")),!(e.ctrlKey||e.shiftKey||e.metaKey)){var i=$L(e.target).closest("lyte-file-close");if(i.length)this.$node.removeUpload(i.eq(0).attr("data-value"));else{var a=$L(e.target).closest("lyte-file-retry");if(a.length){var l=a.eq(0).attr("data-value");this.$node.upload(l,void 0,!0)}else if(($L(e.target).closest("lyte-file-select-area").length||t)&&(this.data.ltPropMultiple&&!this.exceedTotalCount()||0==this.data.queueList.length&&0==this.data.predefinedList.length||this.data.ltPropAllowReplace)){if(this.getMethods("onBeforeOpen")&&0==this.executeMethod("onBeforeOpen",e,this.$node))return;this._file.click()}}}},getFilesFromEntry:function(e,t,i){return new Promise((function(a){e.file((function(e){"."!==e.name.substring(0,1)&&(e.relativePath=i+"/"+e.name,t.push(e)),a()}),(function(e){console.warn(e),a()}))}))},getFilesFromDirectory:function(e,t,i){var a=this,l=e.createReader(),s=[];return new Promise((function(e){l.readEntries((function(l){var r=l.length;if(r>0){for(var o,n=0;n<r;n++)(o=l[n])&&(o.isFile?s.push(a.getFilesFromEntry(o,i,t)):o.isDirectory&&s.push(a.getFilesFromDirectory(o,t+"/"+o.name,i)));s.length?Promise.all(s).then((function(){e()})):e()}}),(function(t){console.warn(t),e()}))}))},filterDropItems:function(e){var t=this,i=[],a=[];return new Promise((function(l){for(var s=0;s<e.length;s++){var r;if(null!=(r=e[s]).webkitGetAsEntry){var o=r.webkitGetAsEntry();o&&(o.isFile?i.push(r.getAsFile()):o.isDirectory&&t.data.ltPropFolder&&a.push(t.getFilesFromDirectory(o,o.name,i)))}else null==r.getAsFile||null!=r.kind&&"file"!==r.kind||i.push(r.getAsFile())}a.length?Promise.all(a).then((function(){l(i)})):l(i)}))},getValidDroppedItems:function(e,t){var i=this,a=e.files;return new Promise((function(t){var l=e.items;l&&l.length&&null!==l[0].webkitGetAsEntry?i.filterDropItems(l).then((function(e){t(e)})):t(a)}))},actions:{change:function(e,t){if(t.files.length){!this.data.ltPropMultiple&&this.data.ltPropAllowReplace&&(this.removeFrmUpload(this.data.queueList,"queueList",!0),this.data.predefinedList.length&&this.removeFrmUpload(this.data.predefinedList,"predefinedList",!0));var i=Array.from(t.files);if(this.getMethods("onSelect")&&!1===this.executeMethod("onSelect",i,e))return void(this._file.value="");this.validate(i)}},cancel:function(e){this.getMethods("onCancel")&&this.executeMethod("onCancel",e)},drag:function(e){var t=e.type,i="onDrag",a=t.match(/drag(.+)/);if(a&&a[1]&&(i+=a[1].slice(0,1).toUpperCase()+a[1].slice(1),/enter|over/.test(e.type))){if("dragover"==e.type){var l=e.dataTransfer;if(l){var s=l.effectAllowed;l.dropEffect="move"===s||"linkMove"===s?"move":"copy"}}e.preventDefault()}"dragenter"==t?this.setData("fileClass","fileDragEnter"):"dragleave"==t&&this.setData("fileClass",""),this.getMethods(i)&&this.executeMethod(i,e,this.$node)},drop:function(e){this.setData("fileClass","");var t=e.dataTransfer;if(t.files.length){var i=this;e.preventDefault(),this.getValidDroppedItems(t).then((function(t){if(t.length){if(i.getMethods("onBeforeDrop")&&0==i.executeMethod("onBeforeDrop",e,i.$node,t))return;e.preventDefault(),i.data.ltPropMultiple||i.$node.removeUpload(),i.validate(t),i.getMethods("onDrop")&&i.executeMethod("onDrop",e,i.$node,t)}}))}},click:function(e){this.openFileWindow(e)},paste:function(e){for(var t=(e.clipboardData||window.clipboardData).items,i=[],a=0;a<t.length;a++){var l=t[a].getAsFile();l&&i.push(l)}if(i.length){if(this.getMethods("onBeforePaste")&&0==this.executeMethod("onBeforePaste",e,i,this.$node))return;this.data.ltPropMultiple||this.$node.removeUpload(),this.validate(i),this.getMethods("onPaste")&&this.executeMethod("onPaste",e,i,this.$node)}},keydown:function(e){if(8==e.which){for(var t=$L("#lyteFileUpdSelectedFile lyte-file-close",this.$node),i=0;i<t.length;i++)this.$node.removeUpload(t.eq(i).attr("data-value"));t.length&&e.preventDefault()}else 13===e.which&&(this.openFileWindow(e,!0),e.preventDefault())}}});
