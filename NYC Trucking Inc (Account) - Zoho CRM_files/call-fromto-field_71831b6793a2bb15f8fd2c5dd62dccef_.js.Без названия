Lyte.Component.register("call-fromto-field",{_template:'<template tag-name="call-fromto-field"> <template is="if" value="{{isNotEmpty(contactId)}}"><template case="true"> <entity-field module="Contacts" eid="{{contactId}}" name="{{contactName}}" is-link="{{isLink}}" open-in-new-tab="{{openInNewTab}}" show-module="{{showModule}}" mover-bcard="{{moverBcard}}" bcard-placement="{{bcardPlacement}}" highlighted-text="{{phoneNumber}}" estyle="{{estyle}}" title="{{if(negate(moverBcard),contactName)}}"></entity-field> </template><template case="false"><template is="if" value="{{isNotEmpty(seId)}}"><template case="true"> <entity-field module="{{seModule}}" eid="{{seId}}" name="{{seName}}" is-link="{{isLink}}" open-in-new-tab="{{openInNewTab}}" show-module="{{showModule}}" mover-bcard="{{moverBcard}}" bcard-placement="{{bcardPlacement}}" highlighted-text="{{phoneNumber}}" estyle="{{estyle}}" title="{{if(negate(moverBcard),seName)}}"></entity-field> </template><template case="false"><template is="if" value="{{expHandlers(isNotEmpty(phoneNumber),\'&amp;&amp;\',canShowPhoneNumber)}}"><template case="true"> <phone-entity activity-id="{{activityId}}" defaultvalue="{{phoneNumber}}" estyle="{{estyle}}" title="{{if(negate(moverBcard),phoneNumber)}}" ajax-edit="{{ajaxEdit}}" show-plus-icon="{{canAllowAssociate}}"></phone-entity> </template><template case="false"><template is="if" value="{{showUnknownIfAbsent}}"><template case="true"> <span class="{{estyle}}">{{getI18n(\'crm.activities.call.unknown.entityname\')}}</span> </template><template case="false"> <span class="callFormatLtr"></span> </template></template></template></template></template></template></template></template> </template>',_dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"componentDynamic",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"componentDynamic",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"componentDynamic",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,0]}]},false:{dynamicNodes:[]}},default:{}}]}},default:{}}]}},default:{}}]}},default:{}}],_observedAttributes:["activityId","contactId","contactName","seId","seName","seModule","phoneId","phoneNumber","showUnknownIfAbsent","isLink","openInNewTab","showModule","moverBcard","bcardPlacement","estyle","highlightedText","canShowPhoneNumber","canAllowAssociate","ajaxEdit"],init:function(){void 0===this.getData("canShowPhoneNumber")&&this.setData("canShowPhoneNumber",!isCallerInfoDisabled)},didConnect:function(){$(this.$node.querySelector("phone-entity")).bind("convertedFromPhone",function(e,t,a,n){this.setData("seModule",a),this.setData("seName",n),this.setData("seId",t),this.getData("ajaxEdit")&&(Calls.updateCardsDataAjax(detailView.entityId,a,t,n),reloadCurrentEntityView(detailView.entityId,detailView.currentModule))}.bind(this))},data:function(){return{activityId:Lyte.attr("string"),contactId:Lyte.attr("string"),contactName:Lyte.attr("string"),seId:Lyte.attr("string"),seName:Lyte.attr("string"),seModule:Lyte.attr("string"),phoneId:Lyte.attr("string"),phoneNumber:Lyte.attr("string"),showUnknownIfAbsent:Lyte.attr("boolean",{default:!0}),isLink:Lyte.attr("boolean",{default:!1}),openInNewTab:Lyte.attr("boolean",{default:!1}),showModule:Lyte.attr("boolean",{default:!1}),moverBcard:Lyte.attr("boolean",{default:!1}),bcardPlacement:Lyte.attr("string",{default:"right"}),estyle:Lyte.attr("string"),highlightedText:Lyte.attr("string"),canShowPhoneNumber:Lyte.attr("boolean",{default:!0}),canAllowAssociate:Lyte.attr("boolean",{default:!0}),ajaxEdit:Lyte.attr("string")}}});
